pipeline {
    agent any 
    parameters { choice(name: 'Environment', choices: ['Staging', 'PreProd', 'Prod','SIT'], description: 'Select the Environment to run the test')}

    stages {
        stage('Clean') { 
            steps {
                bat "echo hello Clean"
                cleanWs notFailBuild: true
            }
        }
        stage('checkout') { 
            steps {
                bat "echo hello checkout"
                checkout([$class: 'GitSCM', branches: [[name: '*/UItest']], extensions: [], userRemoteConfigs: [[url: 'git@github.com:vishnura-Kore/test.git']]])         }
        }
        stage('Build') { 
            steps {
            	
             	bat "echo Build"
            	dir("com.CFrame") { bat 'mvn clean compile' }
               
           }
        }

        stage('Test') { 
            steps {
                bat "echo Test"
                dir("com.CFrame") {bat 'mvn -P %Environment% test'}
            }
        }
    }
    post {
        always {
            junit 'com.CFrame/src/test/java/testresult/cucumber-report/cucumber.xml'
			cucumber buildStatus: 'null', customCssFiles: '', customJsFiles: '', failedFeaturesNumber: -1, failedScenariosNumber: -1, failedStepsNumber: -1, fileIncludePattern: '/*.json', jsonReportDirectory: 'com.CFrame/src/test/java/testresult/cucumber-report', pendingStepsNumber: -1, reportTitle: 'XO platform report', skippedStepsNumber: -1, sortingMethod: 'ALPHABETICAL', undefinedStepsNumber: -1
			bat "echo Done!"
			emailext subject: "Job '${env.JOB_NAME} - ${env.BUILD_NUMBER}:${currentBuild.currentResult}'", body: 'Refer to the Attachement', attachmentsPattern:'Karate/target/karate-reports/karate-summary.html', to: 'vishnuprasath.ramanujam@kore.com'
			bat "echo email done!"
			publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'com.CFrame/src/test/java/testresult/cucumber-report', reportFiles: 'index.html', reportName: 'CC HTML Report', reportTitles: ''])
            }
        }
}
